import Head from "next/head";
import { Box, Button, Flex, HStack, Text, VStack } from "@chakra-ui/react";
import { supabase, SUPABASE_ANON_KEY, SUPABSE_URL } from "@/lib/supabase";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import {
  createBrowserSupabaseClient,
  createServerSupabaseClient,
} from "@supabase/auth-helpers-nextjs";
import { GetServerSideProps } from "next";
import { scopes } from "@/lib/utils";

export default function Home() {
  const [supabaseClient] = useState(() =>
    createBrowserSupabaseClient({
      supabaseUrl: SUPABSE_URL,
      supabaseKey: SUPABASE_ANON_KEY,
    })
  );
  const router = useRouter();
  const signIn = async () => {
    await supabaseClient.auth.signInWithOAuth({
      provider: "spotify",
      options: {
        redirectTo: "/makeit",
        scopes: scopes.join(" "),
      },
    });
    router.push("/makeit");
  };
  useEffect(() => {
    const data = supabase.auth.onAuthStateChange((event, session) => {
      if (event === "SIGNED_IN") {
        router.push("/makeit");
      }
    });
    return () => {
      data.data.subscription.unsubscribe();
    };
  }, [router]);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex
        minHeight="100vh"
        alignItems="center"
        justifyContent="center"
        backgroundColor="spotify.200"
      >
        <VStack>
          <Text
            bgClip="text"
            fontSize="5xl"
            fontWeight="extrabold"
            bgGradient="linear(to-l, teal.500, green.500)"
          >
            welcome to makeit playlist
          </Text>
          <Button
            bgColor="spotify.600"
            color="spotify.200"
            _hover={{ backgroundColor: "spotify.500" }}
            borderRadius="full"
            width="sm"
            onClick={signIn}
          >
            Makeit
          </Button>
        </VStack>
      </Flex>
    </>
  );
}
export const getServerSideProps: GetServerSideProps = async (context) => {
  const supabase = createServerSupabaseClient(context, {
    supabaseKey: SUPABASE_ANON_KEY,
    supabaseUrl: SUPABSE_URL,
  });
  const {
    data: { session },
  } = await supabase.auth.getSession();
  if (session?.provider_token) {
    return {
      redirect: {
        destination: "/makeit",
        permanent: false,
      },
      props: {},
    };
  }
  return {
    props: {
      session,
    },
  };
};
